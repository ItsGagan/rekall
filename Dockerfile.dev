FROM ruby:3.0.1-alpine3.13

ENV APP_PATH=/var/app
ENV BUNDLE_VERSION=2.2.17
ENV RAILS_PORT=3000

COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# install dependencies for application
RUN apk -U add --no-cache \
build-base \
git \
postgresql-dev \
postgresql-client \
libxml2-dev \
libxslt-dev \
nodejs \
npm \
yarn \
tzdata \
&& rm -rf /var/cache/apk/* \
&& mkdir -p $APP_PATH 

# RUN apk add --no-cache build-base clang

ENV CC=clang
ENV CXX=clang++
RUN gem install 'specific_install'
RUN gem specific_install -l "https://github.com/sagarjauhari/mini_racer"

# RUN wget https://nodejs.org/dist/v15.14.0/node-v15.14.0-linux-x64.tar.xz && tar -xf node-v15.14.0-linux-x64.tar.xz
# RUN NODE=/node-v15.14.0-linux-x64/bin/node gem install libv8-node -v '15.14.0.1' --source 'https://rubygems.org/'
# RUN NODE=/node-v15.14.0-linux-x64/bin/node gem install mini_racer -v '0.4.0' --source 'https://rubygems.org/'
RUN gem install bundler --version "$BUNDLE_VERSION"

# RUN pwd
# RUN ls -l
# RUN echo $APP_PATH
# COPY . $APP_PATH
# RUN rm -f $APP_PATH/Gemfile.lock
# navigate to app directory
WORKDIR $APP_PATH

# COPY Gemfile Gemfile.lock ./
# COPY package.json yarn.lock ./

# RUN bundle check || bundle install --jobs=8
# RUN bundle lock --add-platform x86_64-linux-musl
# RUN rm -f Gemfile.lock && bundle install
# RUN yarn install --check-files


# COPY Gemfile ./
# COPY package.json yarn.lock ./

# RUN bundle config set --local deployment 'true'
# RUN rm -f Gemfile.lock
# RUN bundle install

COPY . .
RUN rm -f Gemfile.lock
RUN bundle lock --add-platform x86_64-linux-musl
RUN bundle install
RUN yarn install --check-files

EXPOSE $RAILS_PORT

CMD rails s -p $RAILS_PORT -b 0.0.0.0